{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","handleChange","e","dateString","id","setState","schoolStartDate","schoolEndDate","companyStartDate","companyEndDate","value","target","name","state","phone","email","portfolio","github","linkedin","schoolName","major","degree","schoolLocation","eduDesc","jobTitle","companyName","companyLocation","jobDesc","projectName","projectLink","projectDesc","Panel","Collapse","RangePicker","DatePicker","TextArea","Input","Sider","Layout","Content","Footer","Title","Typography","Paragraph","Text","Option","Select","selectBefore","defaultValue","className","width","theme","title","bordered","defaultActiveKey","ghost","header","key","placeholder","onChange","this","direction","size","addonBefore","date","level","PhoneFilled","href","MailFilled","rel","CodeFilled","GithubFilled","LinkedinFilled","style","marginTop","underline","strong","type","LinkOutlined","fontSize","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6b03f69b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Card, \n  Collapse, \n  Input, \n  DatePicker,\n  Space,\n  Layout,\n  Typography,\n  Select\n} from 'antd';\n\nimport {\n  PhoneFilled,\n  MailFilled,\n  CodeFilled,\n  GithubFilled,\n  LinkedinFilled,\n  LinkOutlined\n} from '@ant-design/icons';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Basic Information\n      name: \"Irene Kwon\",\n\n      // Contact\n      phone: \"123-456-7890\",\n      email: \"irene.haeryun.kwon@gmail.com\",\n      portfolio: \"irnkwon.github.io\",\n      github: \"github.com/irnkwon\",\n      linkedin: \"linkedin.com/in/irene-kwon\",\n\n      // Education\n      schoolName: \"Conestoga College\",\n      major: \"Computer Programming/Analysis\",\n      degree: \"Advanced Diploma\",\n      schoolLocation: \"Waterloo, Ontario\",\n      schoolStartDate: \"2015-09-08\",\n      schoolEndDate: \"2020-04-22\",\n      eduDesc: \"GPA: 3.87, Dean's Honor List, Graduation with Distinction\",\n\n      // Experience\n      jobTitle: \"Designer/Developer\",\n      companyName: \"WSIB Ontairo\",\n      companyLocation: \"Kitchener, Ontario\",\n      companyStartDate: \"2018-04-30\",\n      companyEndDate: \"2019-08-30\",\n      jobDesc: \"Created 5+ web and mobile applications mainly using React, React Native, CSS, \" + \n        \"Node.js, Express.js, GraphQL, Firebase, Git and Sketch\",\n\n      // Projects\n      projectName: \"Resume Maker\",\n      projectLink: \"github.com/irnkwon/resume-maker\",\n      projectDesc: \"Implemented a web application that helps users make an online resume\"\n    }\n  }\n\n  handleChange = (e, dateString, id) => {\n    if (id === \"schoolDate\") {\n      this.setState({ schoolStartDate: dateString[0] });\n      this.setState({ schoolEndDate: dateString[1] });\n    } else if (id === \"companyDate\") {\n      this.setState({ companyStartDate: dateString[0] });\n      this.setState({ companyEndDate: dateString[1] });\n    } else {\n      const value = e.target.value;\n      this.setState({ [e.target.name]: value });\n    }\n  }\n\n  render() {\n\n    const { Panel } = Collapse;\n    const { RangePicker } = DatePicker;\n    const { TextArea } = Input;\n    const { Sider, Content, Footer } = Layout;\n    const { Title, Paragraph, Text } = Typography;\n    const { Option } = Select;\n    const selectBefore = (\n      <Select defaultValue=\"http://\" className=\"select-before\">\n        <Option value=\"http://\">http://</Option>\n        <Option value=\"https://\">https://</Option>\n      </Select>\n    );\n\n    return (\n      <Layout className=\"app-container\">\n        {/* Sider Starts */}\n        <Sider width={350} theme={\"light\"}>\n          <Card title=\"Resume Maker\" bordered={false}>\n            <Collapse defaultActiveKey={['1', '2', '3', '4', '5']} ghost>\n              <Panel header=\"Basic Information\" key=\"1\">\n                <Input name=\"name\" placeholder=\"Your Name\" onChange={this.handleChange}></Input>\n              </Panel>\n              <Panel header=\"Contact\" key=\"2\">\n                <Space direction=\"vertical\" size={12}>\n                  <Input name=\"phone\" placeholder=\"Phone Number\" onChange={this.handleChange}></Input>\n                  <Input name=\"email\" placeholder=\"Email Address\" onChange={this.handleChange}></Input>\n                  <Input \n                    name=\"portfolio\" \n                    placeholder=\"Portfolio Address\" \n                    addonBefore={selectBefore} \n                    onChange={this.handleChange}\n                  ></Input>\n                  <Input \n                    name=\"github\" \n                    placeholder=\"Github Address\" \n                    addonBefore={selectBefore} \n                    onChange={this.handleChange}\n                  ></Input>\n                  <Input \n                    name=\"linkedin\" \n                    placeholder=\"LinkedIn Address\" \n                    addonBefore={selectBefore} \n                    onChange={this.handleChange}\n                  ></Input>\n                </Space>\n              </Panel>\n              <Panel header=\"Education\" key=\"3\">\n                <Space direction=\"vertical\">\n                  <Input name=\"schoolName\" placeholder=\"School\" onChange={this.handleChange}></Input>\n                  <Input name=\"major\" placeholder=\"Major\" onChange={this.handleChange}></Input>\n                  <Input name=\"degree\" placeholder=\"Degree\" onChange={this.handleChange}></Input>\n                  <RangePicker bordered={true} onChange={(date, dateString) => \n                    this.handleChange(date, dateString, \"schoolDate\")} />\n                  <Input name=\"schoolLocation\" placeholder=\"Location\" onChange={this.handleChange}></Input>\n                  <TextArea name=\"eduDesc\" placeholder=\"Education Description\" onChange={this.handleChange}></TextArea>\n                </Space>\n              </Panel>\n              <Panel header=\"Experience\" key=\"4\">\n                <Space direction=\"vertical\">\n                  <Input name=\"jobTitle\" placeholder=\"Job Title\" onChange={this.handleChange}></Input>\n                  <Input name=\"companyName\" placeholder=\"Company\" onChange={this.handleChange}></Input>\n                  <RangePicker bordered={true} onChange={(date, dateString) => \n                    this.handleChange(date, dateString, \"companyDate\")} />\n                  <Input name=\"companyLocation\" placeholder=\"Location\" onChange={this.handleChange}></Input>\n                  <TextArea name=\"jobDesc\" placeholder=\"Experience Description\" onChange={this.handleChange}></TextArea>\n                </Space>\n              </Panel>\n              <Panel header=\"Projects\" key=\"5\">\n                <Space direction=\"vertical\">\n                  <Input name=\"projectName\" placeholder=\"Project Name\" onChange={this.handleChange}></Input>\n                  <Input name=\"projectLink\" placeholder=\"Project Link\" onChange={this.handleChange}></Input>\n                  <TextArea name=\"projectDesc\" placeholder=\"Project Description\" onChange={this.handleChange}></TextArea>\n                </Space>\n              </Panel>\n            </Collapse>\n          </Card>\n        </Sider>\n        {/* Sider Ends */}\n\n        {/* Main Content Starts */}\n        <Layout className=\"main-content\">\n          <Content>\n            <Space direction=\"vertical\">\n              <Title level={1}>{this.state.name}</Title>\n\n              <Space direction=\"vertical\" size={1}>\n                <Paragraph><PhoneFilled /> {this.state.phone}</Paragraph>\n                <Paragraph><a href={\"mailto:\" + this.state.email}><MailFilled /> {this.state.email}</a></Paragraph>\n                <Paragraph><a href={\"http://\" + this.state.portfolio} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <CodeFilled /> {this.state.portfolio}</a></Paragraph>\n                <Paragraph><a href={\"http://\" + this.state.github} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <GithubFilled /> {this.state.github}</a></Paragraph>\n                <Paragraph><a href={\"http://\" + this.state.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <LinkedinFilled /> {this.state.linkedin}</a></Paragraph>\n              </Space>\n\n              <Space direction=\"vertical\" style={{ marginTop: 30 }}>\n                <Title level={3} underline>Education</Title>\n                <Title level={4}>{this.state.major}, {this.state.schoolName}</Title>\n                <Text strong>{this.state.degree}</Text>\n                <Text type=\"secondary\">{this.state.schoolStartDate} to {this.state.schoolEndDate} · {this.state.schoolLocation}\n                </Text>\n                <Text>{this.state.eduDesc}</Text>\n              </Space>\n\n              <Space direction=\"vertical\" style={{ marginTop: 30 }}>\n                <Title level={3} underline>Experience</Title>\n                <Title level={4}>{this.state.jobTitle}, {this.state.companyName}</Title>\n                <Text type=\"secondary\">{this.state.companyStartDate} to {this.state.companyEndDate} · {this.state.companyLocation}\n                </Text>\n                <Text>{this.state.jobDesc}</Text>\n              </Space>\n\n              <Space direction=\"vertical\" style={{ marginTop: 30 }}>\n                <Title level={3} underline>Projects</Title>    \n                <Space direction=\"horizontal\" size={7}>\n                  <Title level={4}>{this.state.projectName}</Title>\n                  <a href={\"http://\" + this.state.projectLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <LinkOutlined style={{ fontSize: 20 }} /></a>\n                </Space>   \n                <Text>{this.state.projectDesc}</Text>\n              </Space>\n            </Space>\n          </Content>\n          {/* Main Content Ends */}\n\n          <Footer className=\"footer\">\n            2020 © designed and developed by Irene Kwon\n          </Footer>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}